5.1 Responsive Web Design คืออะไร อธิบายตามความเข้าใจ

ตอบ การออกแบบเว็บไซต์ให้สามารถปรับขนาดและรูปแบบการแสดงผลได้อัตโนมัติตามขนาดของหน้าจอของอุปกรณ์ เช่น คอมพิวเตอร์, โทรศัพท์มือถือ, แท็บเล็ต ฯลฯ
-----------------------------------------------------------

5.2 RESTful API สื่อสารกับด้วยข้อมูลรูปแบบใด
ตอบ สื่อสารกับข้อมูลที่ใช้โปรโตคอล HTTP 

----------------------------------------------------------
5.3 HTTP Method มีอะไรบ้าง พร้อมอธิบายหลักการใช้งานโดยสังเขป

ตอบ GET: ใช้ในการร้องขอข้อมูลจากเซิร์ฟเวอร์ โดยมักใช้สำหรับการเรียกดูข้อมูลที่ไม่มีการเปลี่ยนแปลงในเซิร์ฟเวอร์ ตัวอย่างเช่นการโหลดหน้าเว็บหรือร้องขอข้อมูลจากฐานข้อมูล

POST: ใช้ในการส่งข้อมูลไปยังเซิร์ฟเวอร์ เพื่อสร้างหรืออัพเดตข้อมูล ส่วนใหญ่ใช้สำหรับการส่งข้อมูลจากฟอร์ม HTML หรือสร้างข้อมูลใหม่ในเซิร์ฟเวอร์

PUT: ใช้ในการส่งข้อมูลไปยังเซิร์ฟเวอร์เพื่ออัพเดตข้อมูลที่มีอยู่แล้ว โดยต้องระบุรายละเอียดของข้อมูลที่ต้องการอัพเดต

DELETE: ใช้ในการลบข้อมูลจากเซิร์ฟเวอร์ โดยระบุรายละเอียดของข้อมูลที่ต้องการลบ
PATCH: ใช้ในการอัพเดตข้อมูลบางส่วนของข้อมูลที่มีอยู่ในเซิร์ฟเวอร์ โดยไม่ต้องส่งข้อมูลทั้งหมด แต่เพียงแค่ส่งข้อมูลที่ต้องการอัพเดตเท่านั้น

HEAD: คล้ายกับเมธอด GET แต่เฉพาะการร้องขอเพื่อขอข้อมูลเฉพาะส่วนหัวของเนื้อหา โดยไม่ร้องขอเนื้อหาที่เต็มรูปแบบ มักใช้ในการตรวจสอบสถานะของเซิร์ฟเวอร์

OPTIONS: ใช้ในการร้องขอว่าเซิร์ฟเวอร์รองรับเมธอด HTTP ใดบ้าง และค่าต่าง ๆ ที่สามารถใช้ได้ในการเรียกใช้ API นั้น

TRACE: เมธอดนี้มักถูกใช้เพื่อทดสอบความสามารถในการเชื่อมต่อกับเซิร์ฟเวอร์ โดยทำการส่งข้อมูลไปยังเซิร์ฟเวอร์แล้วรับข้อมูลตอบกลับมา

-----------------------------------------------------------

5.4 Javascript กับ Typescript เหมือน หรือต่างกันอย่างไร อธิบายโดยสังเขป

ตอบ TypeScript มีประสิทธิภาพในการพัฒนาโค้ดที่ใหญ่และซับซ้อนมากกว่า JavaScript เนื่องจากมีระบบชนิดข้อมูลที่ช่วยในการจัดการโค้ดได้ดีกว่า 

-----------------------------------------------------------

5.5 Server-side กับ Client-side คืออะไร เหมือน หรือต่างกันอย่างไร อธิบายตามความเข้าใจ

ตอบ ต่างกัน Server-side (ฝั่งเซิร์ฟเวอร์ คือส่วนของระบบที่ทำงานบนเซิร์ฟเวอร์ โดยทำหน้าที่ประมวลผลและจัดการข้อมูล),Client-side (ฝั่งไคลเอนต์ ส่วนของระบบที่ทำงานบนอุปกรณ์ของผู้ใช้)
